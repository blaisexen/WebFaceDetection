
<form method="post" enctype="multipart/form-data" id="form">
    <input type="file" name="image" id="image" onchange="this.form.submit()" />
</form>

@if (ViewBag.ImageProcessed == true)
{
    // Show the image.
    if (ViewBag.FacesDetected == true)
    {
        // Show the image here.

        // display from server file
        //<img src="~/Images/@ViewBag.xImageUrl" alt="Image" id="imageElement" style="display: none; height: 0; width: 0;" />

        //display directly from data url
        <img src="data:image/bmp; base64,  @ViewBag.xImageUrl" alt="Image" id="imageElement" style="display: none; height: 0; width: 0;" />

        <p>
            <b>@ViewBag.FaceCount</b> @if (ViewBag.FaceCount == 1)
            {<text><b>face</b> was</text> }
        else
        { <text><b>faces</b> were</text>} detected in the following image.
        </p>
        ///<p>A <code>canvas</code> element is being used to render the image and then rectangles are being drawn on the top of that canvas to highlight the faces in the image.</p>

        <canvas id="faceCanvas"></canvas>

        <!-- HTML content has been loaded, run the script now. -->
        <script>
            // Get the canvas.
            var canvas = document.getElementById("faceCanvas");
            var img = document.getElementById("imageElement");
            canvas.height = img.height;
            canvas.width = img.width;

            var myCanvas = canvas.getContext("2d");
            myCanvas.drawImage(img, 0, 0);

            @if(ViewBag.ImageProcessed == true && ViewBag.FacesDetected == true)
            {
            <text>
            img.style.display = "none";
            var facesFound = true;
            var facePositions = JSON.parse(JSON.stringify(@Html.Raw(ViewBag.FacePositions)));
            </text>
            }

            if(facesFound) {
                // Move forward.
                for (face in facePositions) {
                    // Draw the face.
                    myCanvas.lineWidth = 2;
                    myCanvas.strokeStyle = selectColor(face);

                    console.log(selectColor(face));
                    myCanvas.strokeRect(
                        facePositions[face]["X"],
                        facePositions[face]["Y"],
                        facePositions[face]["Width"],
                        facePositions[face]["Height"]
                    );
                }
            }

            function selectColor(iteration) {
                if (iteration == 0) { iteration = Math.floor(Math.random()); }

                var step = 42.5;
                var randomNumber = Math.floor(Math.random() * 3);

                // Select the colors.
                var red = Math.floor((step * iteration * Math.floor(Math.random() * 3)) % 255);
                var green = Math.floor((step * iteration * Math.floor(Math.random() * 3)) % 255);
                var blue = Math.floor((step * iteration * Math.floor(Math.random() * 3)) % 255);

                // Change the values of rgb, randomly.
                switch (randomNumber) {
                    case 0: red   = 0; break;
                    case 1: green = 0; break;
                    case 2: blue  = 0; break;
                }

                // Return the string.
                var rgbString = "rgb(" + red + ", " + green + " ," + blue + ")";
                return rgbString;
            }
        </script>
    }
    else
    {
        <p>No faces were found in the following image.</p>
    }
}
